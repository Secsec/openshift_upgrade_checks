---
- name: Include the list of alerts to be checked
  include_vars: "{{ role_path }}/defaults/prometheus_alerts.yml"

- name: Retrieve the prometheus URL of the cluster
  block:
    - name: Retrieve the prometheus-k8s route from the openshift-monitoring namespace
      kubernetes.core.k8s_info:
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        kind: Route
        name: prometheus-k8s
        namespace: openshift-monitoring
      register: monitoring_routes

    - name: Set the prometheus URL
      set_fact:
        role_prometheus_url: "{{ monitoring_routes.resources | json_query('[].spec.host') }}"

- name: Retrieve the alerts from prometheus
  uri:
    url:  "https://{{ role_prometheus_url[0] }}/api/v1/alerts"
    method: GET
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: "Bearer {{ openshift_auth_results.openshift_auth.api_key }}"
    validate_certs: "{{ role_openshift_upgrade_check_validate_certs }}"
  register: payload

- name: Retrieve alerts before assessing them on criterias
  set_fact:
    role_alerts: "{{ payload | json_query('json.data.alerts') }}"

- name: Check if any alerts from the alert list is present
  assert:
    that: "{{ item[0].labels.alertname != item[1] }}"
    quiet: yes
  with_nested:
    - "{{ role_alerts }}"
    - "{{ role_prometheus_alerts }}"
  loop_control:
    label: "{{ item[0].labels.alertname }}"
  

- debug:
    msg: "{{ item | json_query('labels.severity') != 'critical' and item | json_query('state') != 'firing' }}"
  loop: "{{ role_alerts }}"
  loop_control:
    label: "{{ item.labels.alertname }}"

#- name: Check if there are critical firing alerts
#  assert:
#    that: "{{ item | json_query('labels.severity') != 'critical' and item | json_query('state') != 'firing' }}"
#  loop: "{{Â role_alerts }}"
