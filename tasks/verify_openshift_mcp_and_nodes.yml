---
- name: Retrieve all Nodes
  kubernetes.core.k8s_info:
    api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
    kind: Node
  register: node_list


- name: Assert that nodes healthchecks are passing
  assert:
    that:
      - item | json_query('status.conditions[? type == `MemoryPressure`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `DiskPressure`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `PIDPressure`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `Ready`].status') | first == 'True'
    quiet: yes
  with_items: "{{ node_list.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"


- name: Retrieve all MachineConfigPools
  kubernetes.core.k8s_info:
    api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
    kind: MachineConfigPool
  register: __mcp_list


- name: Assert that all MachineConfigPools are up to date
  assert:
    that:
      - item | json_query('status.conditions[? type == `RenderDegraded`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `NodeDegraded`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `Degraded`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `Updating`].status') | first == 'False'
      - item | json_query('status.conditions[? type == `Updated`].status') | first == 'True'
    quiet: yes
  loop: "{{ __mcp_list.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"


- name: Assert that all MachineConfigPools have all their machines ready
  assert:
    that:
      - item | json_query('status.degradedMachineCount') == 0
      - item | json_query('status.unavailableMachineCount') == 0
      - item | json_query('status.readyMachineCount') == item | json_query('status.machineCount') 
      - item | json_query('status.updatedMachineCount') == item | json_query('status.machineCount') 
    quiet: yes
  loop: "{{ __mcp_list.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
